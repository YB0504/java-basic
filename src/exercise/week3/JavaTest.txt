1. Java에서 선언 위치에 따른 변수의 종류를 모두 작성하세요.

 - 인스턴스 변수
 - 지역 변수
 - 클래스 변수

2. JVM의 메모리 구조 중 다음 각 영역에 대해 설명하세요.

메서드 (Method Area): 클래스 정보, static 변수, 메소드 정보 등이 저장되는 영역
힙 (Heap): 인스턴스와 배열이 생성되는 공간
스택 (Call Stack): 메소드 호출과 실행에 따른 스택 프레임이 생성되는 영역

3. 다음 중 메서드 오버로딩에 대한 올바른 설명을 모두 고르세요.

(1) 하나의 클래스 내에서 같은 이름의 메서드를 여러 개 정의하는 것을 말한다. o
(2) 메서드의 반환 타입은 구별 요인으로 사용될 수 없다. o
(3) 항상 새로운 메서드를 생성해야 하는 것을 말한다. x
(4) 메서드의 파라미터의 개수, 타입, 순서는 구별 요인으로 사용될 수 있다. o
(5) 부모 클래스의 메서드를 자식 클래스에서 재정의하는 것을 말한다. x
 - 메소드 오버라이딩의 설명

4. 다음 중 생성자(Constructor)에 대한 올바른 설명을 모두 고르세요.

(1) 생성자의 이름은 클래스의 이름과 다를 수 있다. x
 - 다를 수 없다.
(2) 생성자는 객체가 생성될 때 호출되며, 주로 인스턴스 변수의 초기화에 사용된다. o
(3) 클래스에서 생성자를 명시적으로 선언하지 않으면 생성자를 사용할 수 없다. x
 - 기본 생성자는 선언하지 않아도 사용할 수 있다.
(4) 생성자는 반환 타입을 가지지 않는다. o
 - 생성자는 클래스 이름과 매개변수를 가진다.
(5) 생성자는 객체 생성 시 필요한 코드를 실행하는 데 사용된다. o

5. 인스턴스 생성 시, 다음 각 타입의 멤버 변수가 기본적으로 초기화되는 값을 작성하세요.

int: 0
double: 0.0
String: null
boolean: false
참조형: null

6. 메서드 오버라이딩에 대한 올바른 설명을 모두 고르세요.

(1) 메서드 오버라이딩은 부모 클래스에 있는 메서드를 자식 클래스에서 재정의하는 것을 의미한다. o
(2) 오버라이딩된 메서드는 부모 클래스의 메서드와 이름, 파라미터 타입, 파라미터 개수가 모두 동일해야 한다. o
(3) 부모 클래스의 메서드보다 더 많은 수의 예외를 선언할 수 있다. x
 - 부모 클래스보다 더 적은 수의 예외를 선언해야 한다.
(4) 오버라이딩된 메서드는 부모 클래스의 메서드보다 접근 범위가 좁아질 수 있다. x
 - 확장의 개념으로 접근 범위가 더 넓어져야 한다.
(5) 메서드 오버라이딩은 클래스의 다형성을 보장하는 중요한 기능 중 하나다. o

7. final과 abstract에 대한 올바른 설명을 모두 고르세요.

(1) final 클래스는 다른 클래스에 의해 상속될 수 있다. x
 - 상속될 수 없다.
(2) abstract 클래스는 모든 메서드가 반드시 추상 메서드여야 한다. x
 - 하나만 추상 메소드여도 추상 클래스이다.
(3) final 클래스는 변경이 불가능한 클래스이며, 모든 멤버 변수도 반드시 final이어야 한다. x
 - final 클래스는 상속이 불가능한 클래스 이므로 꼭 멤버 변수가 final일 필요는 없다.
 - final 클래스는 변경이 불가능 하다기보다는 상속이 불가능하다.
(4) abstract 클래스는 직접 객체를 생성할 수 없다. o
(5) final 클래스의 메서드는 자식 클래스에서 오버라이딩이 불가능하다. o